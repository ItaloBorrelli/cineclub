version: "3"
services:
  web_app:
    container_name: web_app
    image: cineclub_web_app
    build:
      context: ./web/
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    command:
      - /bin/bash
      - -c
      - |
        touch .env
        echo "PORT=${WEB_PORT}" > .env
        echo "REACT_APP_API_HOST=${API_HOST}" >> .env
        echo "REACT_APP_API_PORT=${API_PORT}" >> .env
        npx serve -s build -l ${WEB_PORT}
    ports:
      - ${WEB_PORT}:${WEB_PORT}
    environment:
      - NODE_ENV=production
      - API_HOST
      - API_PORT
    depends_on:
      - api_server
    networks:
      - frontend
  api_server:
    container_name: api_server
    image: cineclub_api_server
    build:
      context: ./api/
      dockerfile: Dockerfile
    command: npm run dev
    ports:
      - ${API_PORT}:${API_PORT}
    environment:
      - ACCESS_TOKEN_SECRET
      - REFRESH_TOKEN_SECRET
      - PORT=${API_PORT}
      - DB_HOST=mongo
      - DB_PORT
      - DB_NAME
    depends_on:
      - mongo
    networks:
      - frontend
      - backend
  mongo:
    container_name: mongo
    image: mongo
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - backend
volumes:
  mongo_data:
    driver: local
  mongo_config:
    driver: local
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
